arrange(glottodata, family_size_rank)
?arrange
arrange(glottodata, desc(family_size_rank))
dplyr::arrange(glottodata, desc(family_size_rank))
glottomap(glottodata, color = "family_size")
glottomap(glottodata, color = "family_size_rank")
hist(glottodata$family_size)
hist(glottodata$family_size_rank)
glottodata %>% group_by(family_name)
glottodata %>% group_by(family_name) %>% arrange(family_size_rank)
glottodata %>% group_by(family_name) %>% arrange(desc(family_size_rank))
glottodata %>% arrange(desc(family_size_rank))
glottodata %>% arrange(desc(family_size))
glottodata %>% dplyr::arrange(desc(family_size))
unique(glottodata$family_size)
length(unique(glottodata$family_size))
?palette
palette(n = 54
)
palette.colors(n = 54)
RColorBrewer::display.brewer.all()
rainbow(n = 54)
plot(rainbow(n = 54))
plot(1:54, col = rainbow(n = 54))
glottomap(glottodata, color = rainbow(54))
as.character(glottodata$family_size)
glottodata$color <- as.character(glottodata$family_size)
glottomap(glottodata, color = color)
glottodata$colorcol <- as.character(glottodata$family_size)
glottomap(glottodata, color = colorcol)
glottodata$colorcol
glottomap(glottodata, color = "colorcol")
glottopoints <- glottofilter(continent = "Netherlands")
glottomap(glottopoints, color = "blue")
glottomap(glottopoints, color = "name")
glottopoints
glottofilter(country = "Netherlands")
glottopoints <- glottofilter(country = "Netherlands")
nrow(glottopoints)
glottopoints$highlight <- rainbow(10)
glottomap(glottopoints, highlight)
glottomap(glottopoints, "highlight")
rainbow(10)[glottopoints$isocode]
rainbow(10)[glottopoints$region]
glottopoints$region[rainbow(10)]
rainbow(unique(glottodata$family_size) )
colors <- rainbow(unique(glottodata$family_size) )
colors
colorpal <- rainbow(unique(glottodata$family_size) )
names(colorpal)
names(colorpal) <- levels(glottodata$family_size)
colorpal
names(colorpal)
levels(glottodata$family_size)
unique(glottodata$family_size)
names(colorpal) <- unique(glottodata$family_size)
names(colorpal) <- unique(glottopoints$family_size)
names(colorpal)
glottopoints$family_size
glottodata <- glottofilter(country = "Netherlands")
glottodata
colorpal <- rainbow(unique(glottodata$family_size) )
colorpal
glottodata
colorpal <- rainbow(unique(glottodata$family_size) )
colorpal
glottodata
glottodata$family_size
unique(glottodata$family_size)
glottodata <- glottofilter(country = c("Netherlands", "Germany", "Belgium") )
glottodata
colorpal <- rainbow(unique(glottodata$country) )
levels(glottodata$country)
glottodata$country)
glottodata$country
unique(glottodata$country)
colorpal <- rainbow(length(unique(glottodata$country) ))
colorpal
colorpal
glottodata$country[colorpal]
glottodata$country[]colorpal
colorpal
colorpal[unique(glottodata$country)]
rainbow(length(z))[order(order(z))]
z <- glottdata$country
z <- glottodata$country
rainbow(length(z))[order(order(z))]
colorpal <- rainbow(length(unique(glottodata$country) ))
colorpal
names(colorpal) <- unique(glottodata$country)
colorpal
glottomap(glottodata)
glottodata$country == names(colorpal)
glottodata$country[names(colorpal)]
colorpal(glottodata$country)
colorRamp(c("white", "blue"))(values)
colorRamp(c("white", "blue"))(glottodata$country)
levels(glottodata$country)
as.factor(glottodata$country)
glottodata <- glottofilter(country = c("Netherlands", "Germany", "Belgium") )
glottodata$country <- as.factor(glottodata$country)
colorpal <- rainbow(length(unique(glottodata$country) ))
colorpal[glottodata$country]
glottodata <- glottofilter(country = c("Netherlands", "Germany", "Belgium") )
glottodata$country <- as.factor(glottodata$country)
colorpal <- rainbow(length(unique(glottodata$country) ))
glottodata$highlight <- colorpal[glottodata$country]
glottomap(glottodata, color = "highlight")
glottodata <- get_glottodata()
glottodata$family_name <- as.factor(glottodata$family_name)
colorpal <- rainbow(length(unique(glottodata$family_name) ))
glottodata$highlight <- colorpal[glottodata$family_name]
glottomap(glottodata, color = "highlight")
glottodata$highlight
glottodata
glottodata <- get_glottobase()
glottodata$family_name <- as.factor(glottodata$family_name)
colorpal <- rainbow(length(unique(glottodata$family_name) ))
glottodata$highlight <- colorpal[glottodata$family_name]
glottodata$highlight
glottomap(glottodata, color = "highlight")
glottodata$family_size <- as.factor(glottodata$family_size)
glottomap(glottodata, color = "family_size")
glottomap(glottodata, color = "highlight")
glottodata <- glottofilter(country = c("Netherlands", "Germany", "Belgium") )
glottodata$country <- as.factor(glottodata$country)
colorpal <- rainbow(length(unique(glottodata$country) ))
glottodata$highlight <- colorpal[glottodata$country]
glottomap(glottodata, color = "highlight")
document()
load_all()
install(force = TRUE)
glottomap(glottodata = elevdutchies, color = "elevation", label = "name", ptsize = 0.85)
glottocode_online("dutc1256")
library(devtools)
load_all()
glottocode_online("dutc1256")
library(devtools)
load_all()
glottodata <- glottofilter(country = c("Netherlands", "Belgium", "Germany"))
glottodata
glottodata$country %in% "Netherlands"
spotlight
spotlight <- glottodata$country %in% "Netherlands" # which rows should be put in the spotlights? Remaining rows are background
glottodata$spotlight <- spotlight
glottodata
spotcol <- "country"
glottodata[,spotcol]
glottodata[,spotcol] %in% spotlight
spotlight
spotlight <- "Netherlands"
glottodata[,spotcol] %in% spotlight
glottodata[,spotcol]
spotlight
glottodata[,spotcol] %in% spotlight
glottodata$country %in% "Netherlands"
glottodata$country %in% spotlight
glottodata$country %in% spotlight
spotcol
glottodata[,spotcol] %in% spotlight
glottodata$country %in% spotlight
spotcol
glottodata[,spotcol]
glottodata$country
sf::st_drop_geometry(glottodata[,spotcol]) %in% spotlight
sf::st_drop_geometry(glottodata[,spotcol])
glottodata$country
glottodata$spotcol
sf::st_drop_geometry(glottodata)
sf::st_drop_geometry(glottodata)[,spotcol]
sf::st_drop_geometry(glottodata)[,spotcol] %in% spotlight
glottodata$spotlight <- sf::st_drop_geometry(glottodata)[,spotcol] %in% spotlight
glottodata
data <- sf::st_drop_geometry(glottodata)
data$spotlight <- data[,spotcol] %in% spotlight
data$spotlight
data
data$spotlight == FALSE
data$spotlight == FALSE & is.null(bg_groups)
bg_groups <- NULL
data$spotlight == FALSE & is.null(bg_groups)
bggroups <- NULL
data[,spotcol]
data$legend
data$legend <- ifelse(data$spotlight == FALSE, data[,spotcol], data$legend)
data$legend <- NA
data$legend <- ifelse(data$spotlight == FALSE, data[,spotcol], data$legend)
data
bggroups <- "name"
data$legend <- ifelse(data$spotlight == FALSE, data[,bggroups], data$legend)
data$legend
data
slgroupcol <- "name" # column name where groups can be found
bggroupcol <- NULL # column name where groups can be found
slgroupcol <- "name" # column name where groups can be found
data <- sf::st_drop_geometry(glottodata)
data$spotlight <- data[,spotcol] %in% spotlight
slgroupcol <- "name" # column name where groups can be found
bggroupcol <- NULL # column name where groups can be found
data$legend <- NA
if(is.null(bggroupcol)){
data$legend <- ifelse(data$spotlight == FALSE, data[,spotcol], data$legend)
} else{
data$legend <- ifelse(data$spotlight == FALSE, data[,bggroupcol], data$legend)
}
if(is.null(slgroupcol)){
data$legend <- ifelse(data$spotlight == TRUE, data[,spotcol], data$legend)
} else{
data$legend <- ifelse(data$spotlight == TRUE, data[,bggroupcol], data$legend)
}
data
if(is.null(bggroupcol)){
data$legend <- ifelse(data$spotlight == FALSE, data[,spotcol], data$legend)
} else{
data$legend <- ifelse(data$spotlight == FALSE, data[,bggroupcol], data$legend)
}
data
is.null(slgroupcol)
ifelse(data$spotlight == TRUE, data[,spotcol], data$legend)
data$spotlight
data$spotlight == TRUE
data[,spotcol]
data$legend
data
slgroupcol
glottodata <- glottofilter(country = c("Netherlands", "Belgium", "Germany"))
spotcol <- "country"
spotlight <- "Netherlands" # which rows should be put in the spotlights? Remaining rows are background
data <- sf::st_drop_geometry(glottodata)
data$spotlight <- data[,spotcol] %in% spotlight
slgroupcol <- "name" # column name where groups can be found
bggroupcol <- NULL # column name where groups can be found
data$legend <- NA
if(is.null(bggroupcol)){
data$legend <- ifelse(data$spotlight == FALSE, data[,spotcol], data$legend)
} else{
data$legend <- ifelse(data$spotlight == FALSE, data[,bggroupcol], data$legend)
}
if(is.null(slgroupcol)){
data$legend <- ifelse(data$spotlight == TRUE, data[,spotcol], data$legend)
} else{
data$legend <- ifelse(data$spotlight == TRUE, data[,slgroupcol], data$legend)
}
data
data$legend[data$spotlight == TRUE]
length(data$legend[data$spotlight == TRUE])
length(unique(data$legend[data$spotlight == TRUE]))
colpalbg <- length(unique(data$legend[data$spotlight == FALSE]))
colpalbg
colpalbg <- grey.colors(ncolrbg)
ncolrbg <- length(unique(data$legend[data$spotlight == FALSE]))
colpalbg <- grey.colors(ncolrbg)
colpalbg
data$legend[data$spotlight == TRUE]
glottodata$color[data$spotlight == TRUE] <- colpalspot[data$legend[data$spotlight == TRUE]]
colpalspot <- rainbow(ncolrspot)
ncolrspot <- length(unique(data$legend[data$spotlight == TRUE]))
colpalspot <- rainbow(ncolrspot)
glottodata$color[data$spotlight == TRUE] <- colpalspot[data$legend[data$spotlight == TRUE]]
glottodata$color
glottodata$color[data$spotlight == TRUE]
colpalspot
data$legend[data$spotlight == TRUE]
colpalspot[data$legend[data$spotlight == TRUE]]
data$legend[data$spotlight == TRUE]
colpalspot[data$legend[data$spotlight == TRUE]]
colpalspot["Zeeuws"]
colpalspot[data$legend[data$spotlight == TRUE]]
colpalspot
data$legend[data$spotlight == TRUE]
spotlightnames <- as.factor(data$legend[data$spotlight == TRUE])
spotlightnames
colpalspot[spotlightnames]
glottodata$color[data$spotlight == TRUE] <- colpalspot[spotlightnames]
glottodata$color
bgnames <- as.factor(data$legend[data$spotlight == FALSE])
glottodata$color[data$spotlight == FALSE] <- colpalbg[bgnames]
glottodata
data$color[data$spotlight == TRUE] <- colpalspot[spotlightnames]
data$color[data$spotlight == FALSE] <- colpalbg[bgnames]
data
data[, c("glottocode", "spotlight", "legend", "color")]
glottodata <- glottofilter(country = c("Netherlands", "Belgium", "Germany"))
dplyr::left_join(glottodata, data[, c("glottocode", "spotlight", "legend", "color")])
glottodata <- glottofilter(country = c("Netherlands", "Germany", "Belgium") )
glottospotlight(glottodata = "glottodata", spotcol = "country", spotlight = "Netherlands", spotcontrast = "name")
load_all()
document()
load_all()
document()
document()
library(devtools)
document()
?is_sf
is_sf
is_raster
document()
load_all()
document()
load_all()
library(sf)
?is.sf
is_sf
load_all()
?lonlat2utm
lonlat2utm
document()
document
document()
document()
load_all()
glottodata <- glottofilter(country = c("Netherlands", "Germany", "Belgium") )
glottospotlight(glottodata = "glottodata", spotcol = "country", spotlight = "Netherlands", spotcontrast = "name")
glottodata
class(glottodata)
sf::st_drop_geometry(glottodata)
glottospotlight(glottodata = glottodata, spotcol = "country", spotlight = "Netherlands", spotcontrast = "name")
glottomap(glottodata, color = "color")
names(glottodata)
glottodata <- glottospotlight(glottodata = glottodata, spotcol = "country", spotlight = "Netherlands", spotcontrast = "name")
glottomap(glottodata, color = "color")
glottodata <- get_glottobase()
glottodata
glottodata %>% dplyr::group_by(family_size)
glottologdata <- glottodata
glottologdata$family_size_rank <- as.factor(glottologdata$family_size)
levels(glottologdata$family_size_rank) <- seq(1:length(levels(glottologdata$family_size_rank)))
glottologdata$family_size_rank  <- as.numeric(glottologdata$family_size_rank) # easier plotting than ordered levels
glottologdata
glottologdata %>%
dplyr::group_by(family_id)
glottologdata %>%
dplyr::group_by(family_id) %>%
dplyr::mutate(family_size = dplyr::n())
families <- glottologdata %>%
dplyr::filter(level == "family") %>%
dplyr::transmute(family_id = id, family_name = name)
library(dplyr)
glottodata %>% count(family_name)
glottodata %>% dplyr::count(family_name, sort = TRUE)
families$family_name[1:10]
families <- glottodata %>% dplyr::count(family_name, sort = TRUE)
families$family_name[1:10]
glottodata <- glottospotlight(glottodata = glottodata, spotcol =
"family_name", spotlight = families$family_name[1:10], spotcontrast = "family_name", bgcontrast = "family_name")
glottomap(glottodata, color = "color")
families$family_name[1:10]
families$family_name[-1:10]
families$family_name[-c(1:10)]
glottodata <- get_glottobase()
families <- glottodata %>% dplyr::count(family_name, sort = TRUE)
glottodata <- glottospotlight(glottodata = glottodata, spotcol =
"family_name", spotlight = families$family_name[-c(1:10)], spotcontrast = "family_name", bgcontrast = "family_name")
glottomap(glottodata, color = "color")
load_all()
glottodata <- glottospotlight(glottodata = glottodata, spotcol =
"family_name", spotlight = families$family_name[-c(1:10)], spotcontrast = "family_name", bgcontrast = "family_name")
glottomap(glottodata, color = "color", transparency = 0.85)
glottodata <- glottospotlight(glottodata = glottodata, spotcol =
"family_name", spotlight = families$family_name[-c(1:10)], spotcontrast = "family_name", bgcontrast = "family_name")
glottomap(glottodata, color = "color", transparency = 0.25)
glottodata <- glottospotlight(glottodata = glottodata, spotcol =
"family_name", spotlight = families$family_name[-c(1:10)], spotcontrast = "family_name", bgcontrast = "family_name")
glottomap(glottodata, color = "color", transparency = 0.55)
glottodata <- glottospotlight(glottodata = glottodata, spotcol =
"family_name", spotlight = families$family_name[-c(1:10)], spotcontrast = "family_name", bgcontrast = "family_name")
glottomap(glottodata, color = "color", transparency = 0.45)
document()
?glottomap
glottodata <- createglottodata()
glottodata <- createglottodata(glottocodes = "yucu1253")
?createglottodata
createglottodata(glottocodes = c("yucu1253", "tani1257"), variables = 3)
createglottosubdata(glottocodes = c("yucu1253", "tani1257"), variables = 3)
?createglottosubdata
createglottosubdata(glottocodes = c("yucu1253", "tani1257"), variables = 3, groups = c("a", "b"), n = 5)
glottosubdata <- createglottosubdata(glottocodes = c("yucu1253", "tani1257"), variables = 3, groups = c("a", "b"), n = 5)
glottosubdata[[c(1,2)]]
glottosubdata
glottosubdata[[1,2]]
glottosubdata[[1]]
c(glottosubdata[[1]], glottosubdata[[2]])
glottosubdata[c(1,2)]
langlist <- glottosubdata[c(1,2)]
checkdata_lscolcount(langlist)
test <- checkdata_lscolcount(langlist)
test
load_all()
test <- checkdata_lscolcount(langlist)
test
checkdata_lscolcount(langlist)
data <- get_glottodata(meta = FALSE)
data
id = "glottocode"
data[,colnames(data) != id ]
id = NULL
data[,colnames(data) != id ]
data[,colnames(data) != id ]
data[,colnames(data) != 1 ]
data[,colnames(data) != "glottocode" ]
data <- get_glottodata(meta = FALSE)
naviewer(data, id = "glottocode)
naviewer(data, id = "glottocode")
naviewer(data, id = "glottocode")
load_all()
naviewer(data, id = "glottocode")
load_all()
naviewer(data, id = "glottocode")
glottodata <- get_glottodata()
glottodata
glottodata <- get_glottodata(meta = FALSE)
glottodata
cleandata_recodemissing(glottodata, rec = "N")
data <- glottodata[,-1]
data
rec = "N"
na_strings <- c(naniar::common_na_strings, "?", rec)
na_strings
data %>%
naniar::replace_with_na_all(condition = ~. %in% na_strings)
cleandata_recodemissing(glottodata, rec = "N")
glottodata <- get_glottodata(meta = FALSE)
cleandata_recodemissing(glottodata, rec = "N")
rec
# maybe better to do with tribble lookup table https://r-pkgs.org/package-within.html
data <- glottodata[,-1]
na_strings <- c(naniar::common_na_strings, "?", rec)
na_strings
data %>%
naniar::replace_with_na_all(condition = ~. %in% na_strings)
load_all()
glottodata <- get_glottodata(meta = FALSE)
cleandata_recodemissing(glottodata, rec = "N")
document()
?cleandata_recodemissing
createglottodata(glottocodes = c("yucu1253", "tani1257"), variables = 3, meta = FALSE)
document()
?create_glottodata
?createglottodata
document
document()
?create_glottodata
?createglottodata
glottodata <- get_glottobase()
families <- glottodata %>% dplyr::count(family_name, sort = TRUE)
families
glottologdata <- get_glottolog
glottologdata
glottologdata <- get_glottolog()
glottologdata <- get_glottolog("glottolog")
glottologdata
glottologdata$isolate <-   ifelse(
( (glottologdata$family_id == "") & (glottologdata$level != "family") ),
TRUE, FALSE)
glottologdata
head(glottologdata)
# # set family name to isolate
glottologdata[glottologdata$isolate == TRUE, "family_name"] <- "isolate"
head(glottologdata)
head(glottologdata, n = 20)
tail(glottologdata, n = 20)
load_all()
glottodata <- get_glottobase()
glottodata
glottodata[glottodata$isolate == TRUE,]
families <- glottodata %>% dplyr::count(family_name, sort = TRUE)
families
glottopoints <- glottofilter(continent = "South America")
glottopoints %>% dplyr::count(family_name, sort = TRUE)
head(families, 30)
head(st_drop_geometry(families), 30)
glottodata <- glottospotlight(glottodata = glottodata, spotcol =
"family_name", spotlight = families$family_name[-c(1:11)], spotcontrast = "family_name", bgcontrast = "family_name")
glottomap(glottodata, color = "color")
glottomap(glottodata, color = "color", transparency = 0.35)
is_sf(glottodata)
glottodata <- get_glottodata()
glottodata_addcountries(glottodata)
glottodata
glottodata <- get_glottodata(meta = FALSE)
load_all()
!is_sf(glottodata)
is_sf(glottodata)
class(glottodata)[1] != "sf"
load_all()
document()
document()
load_all()
glottodata <- get_glottodata(meta = FALSE)
glottodata
glottodata_addcountries(glottodata)
class(glottodata)[1] != "sf"
if(class(glottodata)[1] != "sf" ) {glottodata <- join_glottospace(glottodata)}
glottodata
load_all()
glottodata_addcountries(glottodata)
join_glottospace(glottodata)
document()
load_all()
glottodata <- get_glottodata(meta = FALSE)
glottodata_addcountries(glottodata)
st_sf(glottodata)
glottodata
glottodata <- join_glottospace(glottodata)
class(glottodata)
glottodata
sf::st_sf(glottodata)
glottodata
document()
load_all()
document()
load_all()
