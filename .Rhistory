all.equal(ar)
identical(ar)
identical(ar)
unique(sf::st_area(glottodata))
if(unique(sf::st_area(glottodata)) != 1){warning('Total length is only meaningful if glottopols have same area.')}
if(length(unique(sf::st_area(glottodata))) != 1){warning('Total length is only meaningful if glottopols have same area.')}
if(length(unique(sf::st_area(glottodata))) != 1){warning(" fun='totlength' is only meaningful if glottopols have same area.")}
str(hello)
str(lonlat2utm)
library(devtools)
load_all()
str(lonlat2utm)
srcfile <- attr(attr(lonlat2utm,"srcref"),"srcfile")
srcfile$filename
srcfile <- attr(attr("lonlat2utm","srcref"),"srcfile")
srcfile$filename
funcname = lonlat2utm
funcname
load_all()
get_funcsource(hello)
get_funcsource(lonlat2utm())
get_funcsource(lonlat2utm
)
noquote("lonlat2utm")
get_funcsource(lonlat2utm)
get_funcsource(noquote("lonlat2utm"))
get_funcsource(eval(noquote("lonlat2utm")))
get_funcsource(substitute(noquote("lonlat2utm")))
get_funcsource(substitute("lonlat2utm"))
get_funcsource(eval("lonlat2utm"))
is.symbol("lonlat2utm")
as.symbol("lonlat2utm")
get_funcsource(as.symbol)
get_funcsource(as.symbol("lonlat2utm"))
x <- as.symbol("lonlat2utm")
x
get_funcsource(x)
?substitute
enquote(lonlat2utm())
quote(lonlat2utm())
x <- quote(lonlat2utm())
gsub("()", x)
gsub(pattern = "()", x = x)
gsub(pattern = "()", x = quote(x))
x <- quote(lonlat2utm())
class(x)
class(lonlat2utm)
as.function(x)
eval(x)
class(ensym("lonlat2utm"))
class(ensyms("lonlat2utm"))
?ensym
library(dplyr)
class(ensyms("lonlat2utm"))
class(ensym("lonlat2utm"))
quote("lonlat2utm")
quote(lonlat2utm)
eval(lonl)
eval(lonlat2utm)
eval("lonlat2utm")
eval("lonlat2utm")
expr("lonlat2utm")
expr(lonlat2utm)
eval(expr(lonlat2utm))
get("lonlat2utm")
load_all()
get_funcsource("lonlat2utm")
get_funcsource(lonlat2utm)
class(lonlat2utm)
class(lonlat2utm())
class(expr(lonlat2utm()))
class(enexpr(lonlat2utm()))
substitute("lonlat2utm")
substitute(lonlat2utm())
substitute(lonlat2utm
)
x <- substitute(lonlat2utm)
eval(x)
class(x)
class(eval(x))
class(lonlat2utm)
get_funcsource("hello")
get_funcsource(hello)
get_funcsource(read_cldf())
get_funcsource(read_cldf
)
get_funcsource(%>%)
get_funcsource("%>%")
get_funcsource(contransform_lonlat())
get_funcsource(contransform_lonlat
)
document()
?lonlat2utm
??glottospace
?glottospace
get_funcsource(glot_exists_one)
hello()
?left_join
glottobase[, c(1:4)]
glottobase[c(1:4), ]
get_glottobase()
glottodata <- glottobase[c(1:4), ]
load_all()
join_glottodata(glottodata)
names(glottodata)
names(glottodata)[1] <- "glottocode"
join_glottodata(glottodata)
x <- join_glottodata(glottodata)
x$geometry
glottodata <- glottodata[,1]
glottodata
x <- join_glottodata(glottodata)
x
glottodata <- glottobase[c(1:4), c(1,2)]
names(glottodata)[1] <- "glottocode"
glottodata
join_glottodata(glottodata)
glottobase
glottobase <- get_glottobase()
glottobase
id
id <- contrans_id2gc(id)
id
id = NULL
id <- contrans_id2gc(id)
id
dplyr::left_join(x = glottodata, y = glottobase, by = id)
sf::st_join(x = glottodata, y = glottobase, by = id)
?merge.data.frame
# dplyr::left_join(x = glottodata, y = glottobase, by = id)
sf::merge(x = glottobase, y = glottodata, by = id)
library(sf)
?st_merge
?merge
?st_join
glottobase
id
sf::merge.sf(x = glottobase, y = glottodata, by = id)
sf::merge(x = glottobase, y = glottodata, by = id)
install.packages("sf")
install.packages("sf")
install.packages("sf")
install.packages("sf")
library(devtools)
?merge.sf
library(sf)
install.packages("Rcpp")
install.packages("Rcpp")
library(sf)
?merge.sf
glottodata[1:4,1:3]
library(glottospace)
glottodata[1:4,1:3]
glottobase[1:3, 1:3]
glottodata <- glottobase[1:3, 1:3]
id <- contrans_id2gc(id)
library(devtools)
load_all()
id <- contrans_id2gc(id)
id = NULL
id <- contrans_id2gc(id)
id
glottobase <- get_glottobase()
glottobase
get_funcsource(get_glottobase())
get_funcsource(get_glottobase)
glottolog <- get_glottolog(data = "glottolog")
glottolog
glottobase <- glottologbooster(glottologdata = glottolog)
glottologdata <- glottolog_addfamilyname(glottologdata)
glottologdata <- glottolog_addisolates(glottologdata)
glottologdata <- glottolog_rmdialects(glottologdata)
glottologdata <- glottolog_rmfamilies(glottologdata)
glottologdata <- glottolog_addfamilysize(glottologdata)
glottologdata <- glottolog_addfamilysizerank(glottologdata)
glottologdata <- glottolog_rmbookkeeping(glottologdata)
glottologdata <- glottolog_rmartifam(glottologdata)
glottologdata <- glottolog_rmsignlangs(glottologdata)
glottologdata <- glottologdata %>% dplyr::rename("glottocode" = "id", "isocode" = "iso639P3code")
glottologdata <- glottolog
glottologdata <- glottolog_addfamilyname(glottologdata)
glottologdata <- glottolog_addisolates(glottologdata)
glottologdata <- glottolog_rmdialects(glottologdata)
glottologdata <- glottolog_rmfamilies(glottologdata)
glottologdata <- glottolog_addfamilysize(glottologdata)
glottologdata <- glottolog_addfamilysizerank(glottologdata)
glottologdata <- glottolog_rmbookkeeping(glottologdata)
glottologdata <- glottolog_rmartifam(glottologdata)
glottologdata <- glottolog_rmsignlangs(glottologdata)
glottologdata <- glottologdata %>% dplyr::rename("glottocode" = "id", "isocode" = "iso639P3code")
glottologdata <- glottologdata %>% dplyr::select(-c(level, description,
markup_description,
child_family_count,
child_language_count))
geoglot
is_sf(glottologdata)
glottologdata <- glot2geoglot(glottologdata)
glottologdata
glottologdata <- glottodata_addcountries(glottologdata)
load_all()
glottobase <- get_glottobase()
sf::merge(x = glottobase, y = glottodata, by = id)
sf::merge.sf(x = glottobase, y = glottodata, by = id)
?st_crs
merge(x = glottobase, y = glottodata, by = id)
by
id
glottobase
glottodata
glottodata
names(glottodata)[1]
names(glottodata)[1] <- "glottocode"
merge(x = glottobase, y = glottodata, by = id)
glottobase
merge(x = glottodata, y = glottobase, by = id)
glottodata
glottobase
?st_join
dplyr::left_join(x = glottodata, y = glottobase, by = id)
glottobase
glottodata
get_glottobase()
glottodata <- get_glottobase()
glottodata
glottodata[c(1:5), ]
glottodata <- glottodata[c(1:5), ]
st_drop_geometry(glottodata)
glottodata <- st_drop_geometry(glottodata)
dplyr::left_join(x = glottodata, y = glottobase, by = id)
join_glottobase(glottodata = glottodata, id = id)
load_all()
join_glottobase(glottodata = glottodata, id = id)
glottodata
glottobase <- get_glottobase()
glottobase
glottobase[,id]
glottobase <- glottobase[,id]
dplyr::left_join(x = glottodata, y = glottobase, by = id)
glottodata
get_funcsource(contrans_id2gc())
get_funcsource(contrans_id2gc)
glottobase
glottolog <- get_glottolog(data = "glottolog")
glottobase <- glot2geoglot(glottolog)
glottospace <- glot2geoglot(glottolog)
glottospace
glottologdata <- get_glottolog(data = "glottolog")
glottologdata
glottologdata <- glottologdata %>% dplyr::rename("glottocode" = "id", "isocode" = "iso639P3code")
glottospace <- glot2geoglot(glottologdata)
glottospace
glottospace <- glottospace[,c("glottocode", "isocode")]
glottospace
checkdata_idunique(glottospace, "glottocode")
checkdata_idunique(st_drop_geometry(glottospace), "glottocode")
get_funcsource(glottodata_spatial)
load_all()
glottospace <- get_glottospace()
glottospace
?glottodata_addcoords
load_all()
?glottodata_addcoords
document9
document()
?glottodata_addcoords
get_funcsource(glottodata_addcoords())
get_funcsource(glottodata_addcoords
)
# Adding names of countries and continents
world <- rnaturalearth::ne_countries(returnclass = "sf", scale = "medium")
world <- world[, c("name", "continent", "subregion")]
names(world)[1] <- "country"
names(world)[3] <- "region"
sf::st_join(x = glottodata, y = world, left = TRUE)
glottodata <- get_glottospace()
glottodata[1:4, ]
glottodata <- glottodata[1:4, ]
sf::st_join(x = glottodata, y = world, left = TRUE)
world
sf::st_make_valid(world)
world <- sf::st_make_valid(world)
sf::st_join(x = glottodata, y = world, left = TRUE)
document()
load_all()
glottodata
colnames(glottodata)
colnames(glottodata) == "glottocode"
sum(colnames(glottodata) == "glottocode")
checkdata_glottocol(data = glottodata)
load_all()
checkdata_glottocol(data = glottodata)
checkdata_glottocol(glottodata = glottodata)
existing <- glottocode_exists(glottodata[[id]])
glottodata
id
glottodata[[id]]
glottocode_exists(glottodata[[id]])
glottocodes_exist(glottodata[[id]])
get_funcsource(glottocode_exists())
get_funcsource(glottocode_exists
)
get_glottospace()
get_glottobase()
load_all()
glottocode_exists(glottodata[[id]])
id
glottodata[[id]]
columns = "glottocode"
find = glottodata[[id]]
purrr::map2_lgl(.x = find, .y = columns, .f = glot_exists_one)
find = glottodata[[id]][1]
find
# TODO: Do not load glottobase each time. This will be solved if glottodata is added to package.
existsdf <- glottosearch(glottodata = get_glottobase(), find = find, partialmatch = FALSE, columns = columns)
existsdf
glottocode
glottocode = glottodata[[id]]
glot_exists(find = glottocode, columns = "glottocode")
glottodata
glottodata = get_glottobase()
glottodata
find
existsdf <- glottosearch(glottodata = get_glottobase(), find = find, partialmatch = FALSE, columns = columns)
existsdf
ifelse(nrow(existsdf == 1), existing <- TRUE, existing <- FALSE)
nrow(existsdf) == 1
ifelse(nrow(existsdf) == 1, existing <- TRUE, existing <- FALSE)
nrow(existsdf) == 1
load_all()
existing <- glottocode_exists(glottodata[[id]])
existing
existing <- glottocode_exists(glottodata[[id]])
glottodata[[id]]
document()
document()
load_all()
document()
load_all()
document()
load_all()
document()
utils::browseURL("www.glottolog.org")
utils::browseURL("http://www.glottolog.org")
document()
load_all()
glottocode_online("yucu1253")
glottocode_online("yucu1253")
?glottosearch
install()
glottobase
load_all()
library(devtools)
load_all()
build()
build_readme()
build_readme()
use_lifecycle_badge("experimental")
use_lifecycle_badge("experimental")
library(devtools)
build_readme()
load_all()
build()
library(devtools)
load_all()
funcsource("glottocode_exists")
use_pipe()
install()
library(devtools)
document()
load_all()
install(force = TRUE)
load_all()
funcsource(points2pols())
funcsource(points2pols
)
pts <- glottofilter(continent = "South America")
pols <- sf::st_collection_extract(sf::st_voronoi(do.call(c, sf::st_geometry(pts))))
# st_crs(pols) <- st_crs(pts)
pols <- sf::st_set_crs(x = pols, value = sf::st_crs(pts))
# match them to glottopoints:
pts$pols <- pols[unlist(sf::st_intersects(pts, pols))]
glottopoints <- glottofilter(continent = "South America")
# FIXME: area of buffers is not equal!
# sf::st_area(glottodata)
glottopoints <- contransform_lonlat(glottopoints)
# Alternative could be to convert to equidistant projection: https://epsg.io/54032
epsg_utm <- lonlat2utm(sf::st_coordinates(glottopoints))
pts <- sf::st_transform(glottopoints, sf::st_crs(epsg_utm))
pols <- sf::st_collection_extract(sf::st_voronoi(do.call(c, sf::st_geometry(pts))))
# st_crs(pols) <- st_crs(pts)
pols <- sf::st_set_crs(x = pols, value = sf::st_crs(pts))
# match them to glottopoints:
pts$pols <- pols[unlist(sf::st_intersects(pts, pols))]
pols <- sf::st_set_geometry(pts, "pols")
continent = "South America"
country = NULL
country <- rnaturalearth::ne_countries(country = country, continent = continent, returnclass = "sf", scale = "medium")
country <- sf::st_geometry(country)
country <- sf::st_transform(country, sf::st_crs(epsg_utm))
country
plot(country)
library(sf)
nc_dissolve(country)
?mergevec
?st_union
st_union(country)
un <- st_union(country)
plot(un)
un <- st_union(country, by_feature = TRUE)
plot(un)
un <- st_cast(st_union(country), "POLYGON")
plot(un)
un
do.call(rbind, country)
rbind.sf(country)
un <- st_combine(country)
plot(un)
un <- st_union(country)
plot(un)
library(sfheaders)
library(nngeo)
sf_remove_holes(un)
un <- sf_remove_holes(un)
plot(un)
load_all()
install(force = TRUE)
load_all()
install(force = TRUE)
?glottosave
load_all()
funcsource(glottosave)
is_sf
load_all()
funcsource("extractgeodata")
fun = mean
fun
enquote(fun)
substitute(fun)
as.character(fun)
get(fun)
fun
match.fun(fun)
print(fun)
?get
get("mean")
quote(fun)
fun
str(fun)
substitute(fun)
eval(fun)
names(fun)
fun
quote(fun)
eval(fun)
quote(eval(fun))
deparse(quote(fun))
class(fun)
?UseMethod
getS3method(fun)
getS3method("mean")
deparse(substitute(fun))
substitute(fun)
eval(fun)
substitute(eval(fun))
mean
UseMethod(fun)
UseMethod(eval(fun))
get(mean)
get("mean")
geodata
roughness <- get_geodata("D:/Global/Topography/Geomorpho90m/250m/Global/dtm_roughness_merit.dem_m_250m_s0..0cm_2018_v1.0.tif")
names(roughness) <- "roughness"
geodata = roughness
glottopoints <- glottofilter(continent = "South America")
glottopols <- points2pols(glottopoints, method = "voronoi", continent = "South America")
glottodata <- glottopols[1:3,]
glottodata
geodata
names(geodata)
fun
fun = "mean"
fun
paste(names(geodata),fun, sep = "_")
fun = function(x){mean(x,na.rm=T)
}
fun
is.function(fun)
is.function("mean")
if(is.function(fun)){funname <- "expr"
} else {funname <- fun}
funname
fun = "mean"
if(is.function(fun)){funname <- "expr"
} else {funname <- fun}
funname
paste(names(geodata),funname, sep = "_")
load_all()
install(force = TRUE)
climate <- get_geodata("D:/Global/Climate/WORLDCLIM2/1km/South America/wc2.0_bio_30s.grd")
climate <- get_geodata("D:/Global/Climate/WORLDCLIM2/1km/South America/wc2.0_bio_30s.grd")
load_all()
climate <- get_geodata("D:/Global/Climate/WORLDCLIM2/1km/South America/wc2.0_bio_30s.grd")
funname
names(geodata)
geodata <- climate
names(geodata)
paste(names(geodata),funname, sep = "_")
install(force = TRUE)
document()
load_all()
install(force = TRUE)
document()
