use_mit
library(devtools)
use_mit_license()
use_mit_license("Sietze Norder")
document()
use_mit_license("Sietze Norder")
document()
use_package("sf")
use_package("rnaturalearth")
use_package("rnaturalearthdata")
use_package("rgeos")
document()
?gs_langmat
?gs_langmat
document()
?gs_langmat
?gs_emptydistmat
use_readme_rmd()
check()
install()
file.exists("~/.ssh/id_rsa.pub")
library(devtools)
document()
knit(input="readme.rmd", output = "readme.md")
library(knitr)
knit(input="readme.rmd", output = "readme.md")
dplyr
??dplyr
??raster
library(raster)
??raster
??sf
??space
??gdist
library(gdistance)
install.packages("gdistance")
library(gdistance)
??gdistance
predict.glm()
?predict.glm
?setClass
class(dist)
dist
Account <- setClass("Account",
slots = list(balance = "numeric")
)
Account
Account(balance = 0)
gs
install.packages('googlesheets')
library(googlesheets)
??`googlesheets-package`
setClass()
?setClass
class?dist
class(data.frame)
methods("data.frame")
methods("ggplot")
methods("raster")
class(raster)
?methods
class(class = "raster")
class(class = "sf")
class(class = "sfc")
method(class = "sfc")
methods(class = "sfc")
methods(class = "sf")
methods(class = "raster")
Account
class("raster")
showClass("raster")
showClass("sf")
showClass("dist")
library(spam)
??spam
points <- matrix(runif(1000*100), nrow=1000, ncol=100)
dist1 <- dist(points)
class(dist1)
showClass("sf")
showClass("sfc")
methods(class = "sf")
methods(class = "sfc")
class(dist1)
gs_datageo(name = "ecoregion")
library(sf)
gs_datageo(name = "ecoregion")
dsf <- gs_datageo(name = "ecoregion")
class(dsf)
dsf0 <- st_drop_geometry(dsf)
class(dsf0)
install.packages(mefa)
install.packages("mefa")
library(mefa)
?stack.dist
vec2dist(1:3, 3)
vec2dist(1:3, 3, diag = TRUE)
vec2dist(1:3, 3, diag = TRUE, upper = TRUE)
vec2dist(1:3, 3, labels=letters[1:3])
x <- dist(1:5)
attr(x, "Labels") <- LETTERS[1:5]
x
is.dist(x)
stack(x)
?ggidst
?ggdist
?distmat
tst <- stack(x)
class(tst)
as.matrix(tst)
plot(tst)
plot(x)
class(x)
