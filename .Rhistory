glottodata[is.na(glottodata)] <- "missing"
glottodata[glottodata != "missing" ] <- 1
glottodata[glottodata == "missing" ] <- 0
glottodata <- as.matrix(sapply(glottodata, as.numeric))
glottodata
glottodata <- get_glottodata(meta = FALSE)
datamissing <- glottodata
datamissing[is.na(datamissing)] <- "missing"
datamissing[datamissing != "missing" ] <- 1
datamissing[datamissing == "missing" ] <- 0
datamissing <- as.matrix(sapply(datamissing, as.numeric))
rownames(datamissing)
datamissing
datamissing <- glottodata[,-"glottocode"]
datamissing <- glottodata[,-c("glottocode") ]
datamissing
id <- "glottocode"
glottodata[,-id ]
glottodata != id
colnames(glottodata) != id
glottodata[,colnames(glottodata) != id ]
datamissing <- glottodata[,colnames(glottodata) != id ]
datamissing[is.na(datamissing)] <- "missing"
datamissing[datamissing != "missing" ] <- 1
datamissing[datamissing == "missing" ] <- 0
datamissing <- as.matrix(sapply(datamissing, as.numeric))
datamissing
rownames(datamissing)
glottodata[,id]
rownames(datamissing) <- glottodata[,id]
datamissing
pheatmap::pheatmap(dfm, show_rownames = TRUE, show_colnames = TRUE, cluster_rows = FALSE, cluster_cols = FALSE)
pheatmap::pheatmap(datamissing, show_rownames = TRUE, show_colnames = TRUE, cluster_rows = FALSE, cluster_cols = FALSE)
n_row <- 30
n_col <- 10
# a mtrix with random numbers
dat <- matrix(rnorm(n_row*n_col),ncol=n_col)
dim(dat)
colnames(dat) <- paste0("S",seq(1,n_col))
rownames(dat) <- paste0("f",seq(1,n_row))
dat[,1:(n_col/2)] <- matrix(rnorm(n_row*n_col/2,mean=50,sd=5),ncol=n_col/2)
dat[,((n_col/2)+1):n_col] <- matrix(rnorm(n_row*n_col/2,mean=70,sd=5),n_col/2)
#colnames(dat) <- paste0("S",c(rep(1,n_col/2),rep(2,n_col/2)))
head(dat)
dat %>%
as.data.frame() %>%
rownames_to_column("f_id") %>%
pivot_longer(-c(f_id), names_to = "samples", values_to = "counts")
library(tidyverse)
dat %>%
as.data.frame() %>%
rownames_to_column("f_id") %>%
pivot_longer(-c(f_id), names_to = "samples", values_to = "counts")
glottodata %>%
as.data.frame()
glottodata[,-c(id)]
glottodata[,-id]
glottodata[,!id]
glottodata %>%
as.data.frame() %>%
pivot_longer(glottocode, names_to = "variable", values_to = "missing")
glottodata
glottodata %>%
as.data.frame() %>%
pivot_longer(-c(glottocode), names_to = "variable", values_to = "missing")
?pivot_longer
pheatmap::pheatmap(datamissing, show_rownames = TRUE, show_colnames = TRUE, cluster_rows = FALSE, cluster_cols = FALSE)
glottodata %>%
as.data.frame() %>%
tidyr::pivot_longer(-c(glottocode), names_to = "variable", values_to = "missing") %>%
ggplot2::ggplot(aes(x=variable, y=glottocode, fill=missing)) +
ggplot2::geom_raster() +
scale_fill_viridis_c()
glottodata %>%
as.data.frame() %>%
tidyr::pivot_longer(-c(glottocode), names_to = "variable", values_to = "missing") %>%
ggplot2::ggplot(aes(x=variable, y=glottocode, fill=missing)) +
ggplot2::geom_raster()
datamissing
datamissing %>%
as.data.frame() %>%
tidyr::pivot_longer(-c(glottocode), names_to = "variable", values_to = "missing") %>%
ggplot2::ggplot(aes(x=variable, y=glottocode, fill=missing)) +
ggplot2::geom_raster()
datamissing
datamissing %>%
as.data.frame() %>%
rownames_to_column("glottocode") %>%
tidyr::pivot_longer(-c(glottocode), names_to = "variable", values_to = "missing") %>%
ggplot2::ggplot(aes(x=variable, y=glottocode, fill=missing)) +
ggplot2::geom_raster()
datamissing <- glottodata[,colnames(glottodata) != id ]
datamissing[is.na(datamissing)] <- "missing"
datamissing[datamissing != "missing" ] <- "present"
datamissing[datamissing == "missing" ] <- "absent"
datamissing <- as.matrix(sapply(datamissing, as.numeric))
datamissing <- glottodata[,colnames(glottodata) != id ]
datamissing[is.na(datamissing)] <- "missing"
datamissing[datamissing != "missing" ] <- "present"
datamissing[datamissing == "missing" ] <- "absent"
datamissing <- as.matrix(sapply(datamissing, as.character))
rownames(datamissing) <- glottodata[,id]
datamissing
datamissing %>%
as.data.frame() %>%
rownames_to_column("glottocode") %>%
tidyr::pivot_longer(-c(glottocode), names_to = "variable", values_to = "missing") %>%
ggplot2::ggplot(aes(x=variable, y=glottocode, fill=missing)) +
ggplot2::geom_raster()
datamissing <- glottodata[,colnames(glottodata) != id ]
datamissing[is.na(datamissing)] <- "nodata"
datamissing[datamissing != "nodata" ] <- "data"
datamissing[datamissing == "nodata" ] <- "NA"
datamissing <- as.matrix(sapply(datamissing, as.character))
rownames(datamissing) <- glottodata[,id]
datamissing %>%
as.data.frame() %>%
rownames_to_column("glottocode") %>%
tidyr::pivot_longer(-c(glottocode), names_to = "variable", values_to = "coverage") %>%
ggplot2::ggplot(aes(x=variable, y=glottocode, fill=missing)) +
ggplot2::geom_raster()
datamissing <- glottodata[,colnames(glottodata) != id ]
datamissing[is.na(datamissing)] <- "nodata"
datamissing[datamissing != "nodata" ] <- "data"
datamissing[datamissing == "nodata" ] <- "NA"
datamissing <- as.matrix(sapply(datamissing, as.character))
rownames(datamissing) <- glottodata[,id]
datamissing
datamissing %>%
as.data.frame() %>%
rownames_to_column("glottocode") %>%
tidyr::pivot_longer(-c(glottocode), names_to = "variable", values_to = "coverage") %>%
ggplot2::ggplot(aes(x=variable, y=glottocode, fill=coverage)) +
ggplot2::geom_raster()
datamissing %>%
as.data.frame() %>%
rownames_to_column("glottocode") %>%
tidyr::pivot_longer(-c(glottocode), names_to = "variable", values_to = "coverage") %>%
ggplot2::ggplot(aes(x=variable, y=glottocode, fill=coverage), col = c("blue", "red") ) +
ggplot2::geom_raster()
datamissing %>%
as.data.frame() %>%
rownames_to_column("glottocode") %>%
tidyr::pivot_longer(-c(glottocode), names_to = "variable", values_to = "coverage") %>%
ggplot2::ggplot(aes(x=variable, y=glottocode, fill=coverage, col = c("blue", "red")) ) +
ggplot2::geom_raster()
coverage
datamissing %>%
as.data.frame() %>%
rownames_to_column("glottocode") %>%
tidyr::pivot_longer(-c(glottocode), names_to = "variable", values_to = "coverage") %>%
ggplot2::ggplot(aes(x=variable, y=glottocode, fill=coverage) ) +
ggplot2::geom_raster() +
scale_fill_discrete()
?scale_fill_discrete
datamissing %>%
as.data.frame() %>%
rownames_to_column("glottocode") %>%
tidyr::pivot_longer(-c(glottocode), names_to = "variable", values_to = "coverage") %>%
ggplot2::ggplot(aes(x=variable, y=glottocode, fill=coverage) ) +
ggplot2::geom_raster() +
scale_fill_discrete(c("orange", "blue"))
datamissing <- datamissing %>%
as.data.frame() %>%
rownames_to_column("glottocode") %>%
tidyr::pivot_longer(-c(glottocode), names_to = "variable", values_to = "coverage")
ggplot2::ggplot(data = datamissing, aes(x=variable, y=glottocode, fill=coverage) ) +
ggplot2::geom_raster(colour = c("orange", "blue"))
ggplot2::ggplot(data = datamissing, aes(x=variable, y=glottocode, fill=coverage) ) +
ggplot2::geom_raster(col = c("orange", "blue"))
ggplot2::ggplot(data = datamissing, aes(x=variable, y=glottocode, fill=coverage) ) +
ggplot2::geom_raster() +
scale_fill_manual(values = c("orange", "blue"))
ggplot2::ggplot(data = datamissing, aes(x=variable, y=glottocode, fill=coverage) ) +
ggplot2::geom_raster() +
scale_fill_manual(values = c("red", "blue"))
ggplot2::ggplot(data = datamissing, aes(x=variable, y=glottocode, fill=coverage) ) +
ggplot2::geom_raster() +
scale_fill_manual(values = c("blue", "darkred"))
ggplot2::ggplot(data = datamissing, aes(x=variable, y=glottocode, fill=coverage) ) +
ggplot2::geom_raster() +
scale_fill_manual(values = c("navy", "darkred"))
ggplot2::ggplot(data = datamissing, aes(x=variable, y=glottocode, fill=coverage) ) +
ggplot2::geom_raster() +
scale_fill_manual(labels = c("data", "NA"), values = c("navy", "darkred"))
ggplot2::ggplot(data = datamissing, aes(x=variable, y=glottocode, fill=coverage) ) +
ggplot2::geom_raster() +
scale_fill_manual(labels = c("saf", "NA"), values = c("navy", "darkred"))
ggplot2::ggplot(data = datamissing, aes(x=variable, y=glottocode, fill=coverage) ) +
ggplot2::geom_raster() +
scale_fill_manual(labels = c("data", "NA"), values = c("navy", "darkred"))
source('C:/Users/sjnor/surfdrive/PROJECTS_SN/SAPPHIRE/R/glottospace/R/checkglottodata.R', echo=TRUE)
load_all()
rm(list = c("checkdata_glottocodes", "checkdata_glottocol", "checkdata_idmissing", "checkdata_idunique", "checkdata_lscolcount", "checkdata_twolevels", "checkdata_varlevels", "checkglottodata", "checkglottosubdata", "naviewer"))
load_all()
document()
load_all()
glottodata <- get_glottodata(meta = FALSE)
checkglottodata(glottodata = glottodata)
plot(x = 1:2, y = 1:3)
plot(x = 1:2, y = 1:2)
glottodata <- get_glottodata(meta = FALSE)
checkglottodata(glottodata = glottodata)
glottodata[rowSums(is.na(glottodata)) != 0, ]
data <- glottodata
id
names(data) %nin% id
data[, names(data) %nin% id]
idname <- data[,id]
idname
data[rowSums(is.na(data)) != 0, ]
rowSums(is.na(data))
data[rowSums(is.na(data)) != 0, ]
round(rowSums(is.na(data))
)
rowSums(is.na(data))
rowSums(is.na(data))
colSums(is.na(data))
data
data
tibble::column_to_rownames(data, var = id)
data <- tibble::column_to_rownames(data, var = id)
data
rowSums(is.na(data))
colSums(is.na(data))
data[rowSums(is.na(data)) != 0, ]
rowmissing <- rowSums(is.na(data))
rowmissing
rowSums(is.na(data))
rowmissing <- rowSums(is.na(data)) != 0
rowmissing
rowmissing[rowmissing != 0]
rowmissing
rowmissing <- rowSums(is.na(data))
rowmissing[rowmissing != 0]
rowmissing <- rowmissing[rowmissing != 0]
rowmissing
data.frame(id = names(rowmissing), "count" = rowmissing)
data %>%
rowwise() %>%
mutate(sum_na = sum(is.na(c_across())))
data
data.frame(id = names(rowmissing), "count" = rowmissing)
rowmissing
data <- tibble::column_to_rownames(data, var = id)
rowmissing <- rowSums(is.na(data))
rowmissing
rowSums(is.na(data), drop = FALSE)
rowSums(is.na(data), simplify = FALSE)
rowSums(is.na(data) )
rowmissing <- tibble::column_to_rownames(data, var = id)
rowmissing$missing <- rowSums(is.na(rowmissing) )
rowmissing <- tibble::column_to_rownames(data, var = id)
data
rowmissing$missing <- rowSums(is.na(rowmissing) )
rowSums(is.na(data) )
get_glottodata(meta = FALSE)
data <- get_glottodata(meta = FALSE)
rowmissing <- tibble::column_to_rownames(data, var = id)
rowmissing
rowmissing$missing <- rowSums(is.na(rowmissing) )
rowmissing
rowmissing[rowmissing != 0, "missing"]
rowmissing != 0
rowmissing$missing != 0
rowmissing[rowmissing$missing != 0, "missing"]
rowmissing$missing != 0
rowmissing[rowmissing$missing != 0, ]
rowmissing[rowmissing$missing != 0, "missing", drop = FALSE]
get_glottodata(dummy = "glottosubdata", meta = FALSE)
data <- get_glottodata(dummy = "glottosubdata", meta = FALSE)[[2]]
rowmissing <- tibble::column_to_rownames(data, var = id)
colnames(data)
id = "glottosubcode"
rowmissing <- tibble::column_to_rownames(data, var = id)
rowmissing$missing <- rowSums(is.na(rowmissing) )
rowmissing <- rowmissing[rowmissing$missing != 0, "missing", drop = FALSE]
rowmissing
by = "row"
datamissing <- tibble::column_to_rownames(data, var = id)
datamissing$missing <- ifelse(by == "row", rowSums(is.na(datamissing)),  colSums(is.na(datamissing)) )
datamissing <- datamissing[datamissing$missing != 0, "missing", drop = FALSE]
datamissing
colmissing <- tibble::column_to_rownames(data, var = id)
colmissing$missing <- rowSums(is.na(colmissing) )
colmissing <- colmissing[colmissing$missing != 0, "missing", drop = FALSE]
colmissing
data
rowmissing <- tibble::column_to_rownames(data, var = id)
rowmissing$missing <- colSums(is.na(rowmissing) )
rowmissing <- rowmissing[rowmissing$missing != 0, "missing", drop = FALSE]
rowmissing$missing != 0
rowmissing
rowmissing <- tibble::column_to_rownames(data, var = id)
colSums(is.na(rowmissing) )
rbind(rowmissing, colSums(is.na(rowmissing) ) )
rowmissing <- rbind(rowmissing, colSums(is.na(rowmissing) ) )
rowmissing
rowmissing <- rbind(rowmissing, "missing" = colSums(is.na(rowmissing) ) )
rowmissing
rowmissing["missing", ]
rowmissing["missing", ] != 0
rowmissing[rowmissing["missing", ] != 0, ]
rowmissing["missing", ] != 0
rowmissing["missing", rowmissing["missing", ] != 0]
rowmissing["missing", rowmissing["missing", ] != 5]
rowmissing["missing", rowmissing["missing", ] != 5, drop = FALSE]
load_all()
glottodata <- get_glottodata(meta = FALSE)
checkglottodata(glottodata = glottodata)
data
colmissing <- tibble::column_to_rownames(data, var = id)
colmissing$missing <- rowSums(is.na(colmissing) )
colmissing[colmissing$missing != 0, "missing", drop = FALSE]
colmissing$missing
colmissing$missing != 0
any(colmissing$missing != 0)
data
datamissing <- tibble::column_to_rownames(data, var = id)
datamissing$missing <- rowSums(is.na(datamissing) )
if(any(datamissing$missing != 0)){
message("Some rows have missing data:")
datamissing[datamissing$missing != 0, "missing", drop = FALSE]
}
datamissing <- tibble::column_to_rownames(data, var = id)
datamissing$count <- rowSums(is.na(datamissing) )
if(any(datamissing$count != 0)){
message("Some rows have missing data:")
datamissing[datamissing$count != 0, "count", drop = FALSE]
}
datamissing <- tibble::column_to_rownames(data, var = id)
datamissing <- rbind(datamissing, "count" = colSums(is.na(datamissing) ) )
datamissing
datamissing["count", rowmissing["count", ] != 0, drop = FALSE]
datamissing["count", datamissing["count", ] != 0, drop = FALSE]
t(datamissing)
x <- datamissing["count", datamissing["count", ] != 0, drop = FALSE]
t(x)
datamissing["count", ] != 0
load_all()
glottodata <- get_glottodata(meta = FALSE)
checkglottodata(glottodata = glottodata)
glottodata
data <- glottodata
datamissing <- tibble::column_to_rownames(data, var = id)
id = "glottocode"
datamissing <- tibble::column_to_rownames(data, var = id)
datamissing <- rbind(datamissing, "count" = colSums(is.na(datamissing) ) )
datamissing
any(datamissing["count", ] != 0)
message("Some columns have missing data:")
datamissing["count", datamissing["count", ] != 0, drop = FALSE]
datamissing["count", datamissing["count", ] != 0, drop = FALSE]
load_all()
glottodata <- get_glottodata(meta = FALSE)
checkglottodata(glottodata = glottodata)
glottodata
data = glottodata
id
checkdata_colmissing(data = glottodata, id = id)
checkdata_rowmissing(data = glottodata, id = id)
checkglottodata(glottodata = glottodata)
datamissing[datamissing$count != 0, "count", drop = FALSE]
datamissing <- tibble::column_to_rownames(data, var = id)
datamissing$count <- rowSums(is.na(datamissing) )
if(any(datamissing$count != 0)){
message("Some rows have missing data:")
datamissing[datamissing$count != 0, "count", drop = FALSE]
}
datamissing <- tibble::column_to_rownames(data, var = id)
datamissing <- rbind(datamissing, "count" = colSums(is.na(datamissing) ) )
if(any(datamissing["count", ] != 0)){
message("Some columns have missing data:")
datamissing["count", datamissing["count", ] != 0, drop = FALSE]
}
print(datamissing["count", datamissing["count", ] != 0, drop = FALSE])
load_all()
checkglottodata(glottodata = glottodata)
glottodata <- get_glottodata()
glottodata
glottodata$structure$type
glottodata$lookup
glottodata$lookup[,1]
glottodata$structure$type %in% c("symm", "asymm", "factor", "ordered", "numeric", "ordratio", "logratio")
all(glottodata$structure$type %in% c("symm", "asymm", "factor", "ordered", "numeric", "ordratio", "logratio"))
create_lookupsheet()
create_lookupsheet()[,"type_lookup"]
!all(glottodata$structure$type %in% create_lookupsheet()[,"type_lookup"])
glottodata$structure$type
create_lookupsheet()[,"type_lookup"]
glottodata$structure$type %in% create_lookupsheet()[,"type_lookup"]
all(glottodata$structure$type %in% create_lookupsheet()[,"type_lookup"])
glottodata
names(glottodata)
paste(names(glottodata))
paste(names(glottodata), sep = ", ")
paste(names(glottodata), collapse = ", ")
sheetnames <- paste(names(glottodata), collapse = ", ")
sheetnames
createglottodata()
paste("This glottodataset contains the folowing sheets:", sheetnames)
glottodata$structure$weight
weight = glottodata$structure$weight
glottosubdata
glottosubdata <- glottosubdata[[1]]
glottosubdata
glottosubdata
funcsource(glottocode_exists)
glottosubcodes <- glottosubdata$glottosubcode
glottosubcodes
strsplit(glottosubcodes, split = "_")
unlist(strsplit(glottosubcodes, split = "_"))
strsplit(glottosubcodes, split = "_")
?strsplit
str <- "qwerty keyboard"
result_1 <- strsplit(str,"[[:space:]]")[[1]][1]
result_2 <- strsplit(str,"[[:space:]]")[[1]][2]
result_1
strsplit(glottosubcodes, split = "_")[1]
strsplit(glottosubcodes, split = "_")[[1]][1]
strsplit(glottosubcodes, split = "_")[[1]][1]
strsplit(glottosubcodes, split = "_")[[1]][2]
strsplit(glottosubcodes, split = "_")[[1]][3]
length(glottosubcodes)
gsc_df <- data.frame(matrix(nrow = length(glottosubcodes), ncol = 3) )
gsc_df
colnames(gsc_df) <- c("glottocode", "group", "n")
gsc_df
seq(glottosubcodes)
gsc_df
for(i in seq(glottosubcodes)){
gsc_df[i, "glottocode"] <- strsplit(glottosubcodes, split = "_")[[i]][1]
gsc_df[i, "group"] <- strsplit(glottosubcodes, split = "_")[[i]][2]
gsc_df[i, "n"] <- strsplit(glottosubcodes, split = "_")[[i]][3]
}
gsc_df
glottosubdata <- get_glottodata(meta = FALSE, dummy = "glottosubdata")
join_glottodata(glottosubdata)
glottosubdata <- join_glottodata(glottosubdata)
checkdata_glottosubcol(glottosubdata = glottosubdata)
load_all()
checkdata_glottosubcol(glottosubdata = glottosubdata)
load_all()
id <- "glottosubcode"
checkdata_glottosubcol(glottosubdata = glottosubdata)
checkdata_idmissing(data = glottosubdata, id = id)
checkdata_idunique(data = glottosubdata, id = id)
checkdata_twolevels(data = glottosubdata)
checkdata_glottosubcodes(glottosubdata = glottosubdata)
checkdata_varlevels(data = glottosubdata)
naviewer(data = glottosubdata, id = id)
library(devtools)
load_all()
document()
document()
load_all()
install(force = TRUE)
install.packages(glottospace)
install.packages("glottospace")
install.packages("glottospace")
get_glottodata()
load_all()
library(devtools)
load_all()
get_glottodata()
glottodata <- get_glottodata()
str(glottodata)
1. glottodata. This is user-provided data that consist of a glottocode and any number of linguistic and/or cultural variables (features).
``` r
glottodata <- get_glottodata(meta = FALSE)
glottodata
```
2. glottospace. This returns points or polygons for each language in [glottolog](https://glottolog.org/).
``` {r}
glottospace <- get_glottospace()
head(glottospace)
```
3. glottobase. This is a boosted/enriched version of [glottolog](https://glottolog.org/).
``` {r glottospace}
glottobase <- get_glottobase()
colnames(glottobase)
```
glottodata
glottobase <- get_glottobase()
colnames(glottobase)
## Filter by continent
glottopoints <- glottofilter(continent = "South America")
library(glottospace)
## Filter by continent
glottopoints <- glottofilter(continent = "South America")
glottopols <- points2pols(glottopoints, interpolation = "voronoi", continent = "South America")
library(glottospace)
## Filter by continent
glottopoints <- glottofilter(continent = "South America")
glottopols <- points2pols(glottopoints, method = "voronoi", continent = "South America")
funcsource("points2pols")
load_all()
library(glottospace)
## Filter by continent
glottopoints <- glottofilter(continent = "South America")
glottopols <- points2pols(glottopoints, method = "voronoi", continent = "South America")
glottomap(glottodata = glottopols, label = "glottocode", colorby = "family_size_rank")
glottomap(glottodata = glottopoints, label = "glottocode")
head(glottopoints)
glottopoints <- glottofilter(continent = "South America")
## Plot point data:
glottomap(glottodata = glottopoints, label = "glottocode", colorby = "isolate")
# Interpolate points to polygons:
glottopols <- points2pols(glottopoints, method = "voronoi", continent = "South America")
# Plot polygon data:
glottomap(glottodata = glottopols, label = "glottocode", colorby = "family_size_rank")
install(force = TRUE)
