colnames(structure)[1] <- "varname"
message("The structure table does not contain a 'varname' column, trying with the first column instead.")
}
dplyr::left_join(structure, data.frame("varname" = colnames(glottodata)) )
structure <- suppressMessages(dplyr::left_join(data.frame("varname" = colnames(glottodata)), structure))
dropvars <- which(structure$type %nin% create_lookuptable()$type_lookup )
glottodata <- glottodata[,-dropvars]
structure <- structure[-dropvars, ]
structure
glottodata
glottodata[,dropvars]
dropvars
dropvars <- which(structure$type %nin% create_lookuptable()$type_lookup )
dropvars
purrr::is_empty(dropvars)
structure <- readxl::read_xlsx(path = path, sheet = "structure")
isolates_structure <- readxl::read_xlsx(path = path, sheet = "structure")
glottodata <- isolates
# glottodata:
glottodata <- tibble::column_to_rownames(glottodata, "glottocode")
# structure:
if(!("varname" %in% colnames(structure) ) ){
colnames(structure)[1] <- "varname"
message("The structure table does not contain a 'varname' column, trying with the first column instead.")
}
structure <- suppressMessages(dplyr::left_join(data.frame("varname" = colnames(glottodata)), structure))
dropvars <- which(structure$type %nin% create_lookuptable()$type_lookup )
dropvars
message(paste0("The following variables are removed from glottodata because their type is not one of the pre-specified types:"))
glottodata[,dropvars]
colnames(glottodata[,dropvars])
message(paste0("The following variables are removed from glottodata because their type is not one of the pre-specified types:", colnames(glottodata[,dropvars])))
paste0(colnames(glottodata[,dropvars]), collapse = ",")
dropvarnames <- paste0(colnames(glottodata[,dropvars]), collapse = ",")
message(paste0("The following variables are removed from glottodata because their type is not one of the pre-specified types:", dropvarnames))
structure$type[structure$type == "sym"] <- "symm"
dropvars <- which(structure$type %nin% create_lookuptable()$type_lookup )
dropvars
dropvarnames <- paste0(colnames(glottodata[,dropvars]), collapse = ",")
message(paste0("The following variables are removed from glottodata because their type is not one of the pre-specified types:", dropvarnames))
glottodata <- glottodata[,-dropvars]
structure <- structure[-dropvars, ]
glottodata
structure
symm <- which(structure$type == "symm")
asymm <- which(structure$type == "asymm")
numer <- which(structure$type == "numeric")
fact <- which(structure$type == "factor")
ordfact <- which(structure$type == "ordered")
ordratio <- which(structure$type == "ordratio")
logratio <- which(structure$type == "logratio")
cbinary <- c(symm, asymm)
glottodata[cbinary] <- lapply(glottodata[cbinary], as.logical)
glottodata[numer] <- lapply(glottodata[numer], as.numeric)
glottodata[fact] <- lapply(glottodata[fact], as.factor)
glottodata[ordfact] <- mapply(FUN = as.ordfact, x = glottodata[ordfact], levels = levels[ordfact])
glottodata[ordratio] <- lapply(glottodata[ordratio], as.numeric)
glottodata[logratio] <- lapply(glottodata[logratio], as.numeric)
levels[ordfact]
levels
levels <- structure$levels
glottodata[ordfact] <- mapply(FUN = as.ordfact, x = glottodata[ordfact], levels = levels[ordfact])
glottodata[ordratio] <- lapply(glottodata[ordratio], as.numeric)
glottodata[logratio] <- lapply(glottodata[logratio], as.numeric)
# weights
if(all(is.na(structure$weight))){
weights <- rep(1, nrow(structure))
message('All weights are NA. Default is to weight all variables equally: all weights set to 1')
} else{
weights <- structure$weight
}
dist <- cluster::daisy(x = glottodata, metric = "gower",
type = list(symm = symm, asymm = asymm, ordratio = ordratio, logratio = logratio),
weights = weights)
warnings()
dist
load_all()
load_all()
structure <- isolates_structure
glottodata <- isolates
glottodist(glottodata, structure)
structure$type[structure$type == "sym"] <- "symm"
glottodist(glottodata, structure)
message(paste0("The following variables are ignored while calculating distances (their type is not one of the pre-specified types): \n", dropvarnames))
glottodata <- glottoget(meta = TRUE)
glottodist <- glottodist(glottodata = glottodata)
glottodist
glottdata <- isolates
structure <- isolates_structure
glottodist_isol <- glottodist(glottodata = glottodata)
glottodist <- glottodist_isol
glottodist
glottodist_isol <- glottodist(glottodata, structure)
glottodata
glottodata <- isolates
glottodist_isol <- glottodist(glottodata, structure)
structure$type[structure$type == "sym"] <- "symm"
glottodist_isol <- glottodist(glottodata, structure)
glottodist_isol
glottodist <- glottodist_isol
distmat <- contransform_distmat(glottodist)
distmat
distmat %>%
as.data.frame()
distmat %>%
as.data.frame() %>%
tibble::rownames_to_column("glottocode")
distmat %>%
as.data.frame() %>%
tibble::rownames_to_column("glottocode") %>%
tidyr::pivot_longer(-c(glottocode), names_to = "variable", values_to = "coverage")
distpivot <- distmat %>%
as.data.frame() %>%
tibble::rownames_to_column("glottocode") %>%
tidyr::pivot_longer(-c(glottocode), names_to = "variable", values_to = "coverage")
distpivot <- distmat %>%
as.data.frame() %>%
tibble::rownames_to_column("glottocode") %>%
tidyr::pivot_longer(-c(glottocode), names_to = "glottocode", values_to = "distance")
distpivot <- distmat %>%
as.data.frame() %>%
tibble::rownames_to_column("glottocodex") %>%
tidyr::pivot_longer(-c(glottocode), names_to = "glottocodey", values_to = "distance")
distpivot <- distmat %>%
as.data.frame() %>%
tibble::rownames_to_column("glottocode_x") %>%
tidyr::pivot_longer(-c(glottocode_x), names_to = "glottocode_y", values_to = "distance")
ggplot2::ggplot(data = distpivot, ggplot2::aes(x=glottocode_x, y=glottocode_y, fill=distance) ) +
ggplot2::geom_raster()
ggplot2::ggplot(data = distpivot, ggplot2::aes(x=glottocode_x, y=glottocode_y, fill=distance) ) +
ggplot2::geom_raster() +
ggplot2::scale_fill_viridis()
ggplot2::ggplot(data = distpivot, ggplot2::aes(x=glottocode_x, y=glottocode_y, fill=distance) ) +
ggplot2::geom_raster() +
ggplot2::scale_fill_viridis_b()
ggplot2::ggplot(data = distpivot, ggplot2::aes(x=glottocode_x, y=glottocode_y, fill=distance) ) +
ggplot2::geom_raster() +
ggplot2::scale_colour_gradient2()
ggplot2::ggplot(data = distpivot, ggplot2::aes(x=glottocode_x, y=glottocode_y, fill=distance) ) +
ggplot2::geom_raster(ggplot2::aes(colour = distance)) +
ggplot2::scale_colour_gradient2()
ggplot2::ggplot(data = distpivot, ggplot2::aes(x=glottocode_x, y=glottocode_y, fill=distance) ) +
ggplot2::geom_raster(ggplot2::aes(color = distance)) +
ggplot2::scale_colour_gradient2()
ggplot2::ggplot(data = distpivot, ggplot2::aes(x=glottocode_x, y=glottocode_y, fill=distance) ) +
ggplot2::geom_raster() +
ggplot2::scale_colour_continuous()
ggplot2::ggplot(data = distpivot, ggplot2::aes(x=glottocode_x, y=glottocode_y, fill=distance) ) +
ggplot2::geom_raster() +
ggplot2::scale_fill_continuous()
ggplot2::ggplot(data = distpivot, ggplot2::aes(x=glottocode_x, y=glottocode_y, colour=distance) ) +
ggplot2::geom_raster()
ggplot2::ggplot(data = distpivot, ggplot2::aes(x=glottocode_x, y=glottocode_y, fill=distance) ) +
ggplot2::geom_raster() +
ggplot2::scale_fill_continuous()
ggplot2::ggplot(data = distpivot, ggplot2::aes(x=glottocode_x, y=glottocode_y, fill=distance) ) +
ggplot2::geom_raster() +
ggplot2::scale_fill_viridis_c()
ggplot2::ggplot(data = distpivot, ggplot2::aes(x=glottocode_x, y=glottocode_y, fill=distance) ) +
ggplot2::geom_raster() +
ggplot2::scale_fill_distiller(palette = "magma")
ggplot2::ggplot(data = distpivot, ggplot2::aes(x=glottocode_x, y=glottocode_y, fill=distance) ) +
ggplot2::geom_raster() +
ggplot2::scale_fill_distiller(palette = "BuPu", na.value = "grey50")
ggplot2::ggplot(data = distpivot, ggplot2::aes(x=glottocode_x, y=glottocode_y, fill=distance) ) +
ggplot2::geom_raster() +
ggplot2::scale_fill_distiller(palette = "Reds", na.value = "grey50")
ggplot2::ggplot(data = distpivot, ggplot2::aes(x=glottocode_x, y=glottocode_y, fill=distance) ) +
ggplot2::geom_raster() +
ggplot2::scale_fill_distiller(palette = rev("Reds"), na.value = "grey50")
ggplot2::ggplot(data = distpivot, ggplot2::aes(x=glottocode_x, y=glottocode_y, fill=distance) ) +
ggplot2::geom_raster() +
ggplot2::scale_fill_distiller(palette = "Reds", na.value = "grey50", direction = -1)
ggplot2::ggplot(data = distpivot, ggplot2::aes(x=glottocode_x, y=glottocode_y, fill=distance) ) +
ggplot2::geom_raster() +
ggplot2::scale_color_manual(values = rev(RColorBrewer::brewer.pal(3,'Blues')))
ggplot2::ggplot(data = distpivot, ggplot2::aes(x=glottocode_x, y=glottocode_y, fill=distance) ) +
ggplot2::geom_raster() +
ggplot2::scale_color_manual(values = rev(RColorBrewer::brewer.pal(3,'YlOrRd')))
RColorBrewer::brewer.pal(3,'YlOrRd')
ggplot2::ggplot(data = distpivot, ggplot2::aes(x=glottocode_x, y=glottocode_y, fill=distance) ) +
ggplot2::geom_raster() +
ggplot2::scale_fill_distiller(palette = "YlOrRd", na.value = "grey50")
ggplot2::ggplot(data = distpivot, ggplot2::aes(x=glottocode_x, y=glottocode_y, fill=distance) ) +
ggplot2::geom_raster() +
ggplot2::scale_fill_distiller(palette = "YlOrRd", na.value = "grey50", direction = -1)
ggplot2::ggplot(data = distpivot, ggplot2::aes(x=glottocode_x, y=glottocode_y, fill=distance) ) +
ggplot2::geom_raster() +
ggplot2::scale_fill_distiller(palette = "YlOrRd", na.value = "grey50", direction = 1)
ggplot2::ggplot(data = distpivot, ggplot2::aes(x=glottocode_x, y=glottocode_y, fill=distance) ) +
ggplot2::geom_raster() +
ggplot2::scale_fill_distiller(palette = "YlOrRd", na.value = "grey50", direction = 1) +
ggplot2::labs(x = "glottocode", y = "glottocode")
ggplot2::ggplot(data = distpivot, ggplot2::aes(x=glottocode_x, y=glottocode_y, fill=distance) ) +
ggplot2::geom_raster() +
ggplot2::scale_fill_distiller(palette = "YlOrRd", na.value = "grey50", direction = 1) +
ggplot2::labs(x = "glottocode", y = "glottocode") +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
ggplot2::ggplot(data = distpivot, ggplot2::aes(x=glottocode_x, y=glottocode_y, fill=distance) ) +
ggplot2::geom_raster() +
ggplot2::scale_fill_distiller(palette = "YlOrRd", na.value = "grey50", direction = 1) +
ggplot2::labs(x = "glottocode", y = "glottocode") +
ggplot2::theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
ggplot2::ggplot(data = distpivot, ggplot2::aes(x=glottocode_x, y=glottocode_y, fill=distance) ) +
ggplot2::geom_raster() +
ggplot2::scale_fill_distiller(palette = "YlOrRd", na.value = "grey50", direction = 1) +
ggplot2::labs(x = "glottocode", y = "glottocode") +
ggplot2::theme(axis.text.x = ggplot2::element_text(angle = 90, vjust = 0.5, hjust=1))
load_all()
glottodata <- glottoget(meta = TRUE)
glottodist <- glottodist(glottodata = glottodata)
glottoplot(glottodist)
glottodist
load_all()
glottoplot(glottodist)
glottodist
distmat <- contransform_distmat(glottodist)
distmat
distpivot <- distmat %>%
as.data.frame() %>%
tibble::rownames_to_column("glottocode_x") %>%
tidyr::pivot_longer(-c(glottocode_x), names_to = "glottocode_y", values_to = "distance")
distpivot
heatmap <- ggplot2::ggplot(data = distpivot, ggplot2::aes(x=glottocode_x, y=glottocode_y, fill=distance) ) +
ggplot2::geom_raster() +
ggplot2::scale_fill_distiller(palette = "YlOrRd", na.value = "grey50", direction = 1) +
ggplot2::labs(x = "glottocode", y = "glottocode") +
ggplot2::theme(axis.text.x = ggplot2::element_text(angle = 90, vjust = 0.5, hjust=1))
heatmap
glottodata
glottodata <- glottoget()
glottodata
naviewer(glottodata)
naviewer(glottodata, "glottocode")
glottoplot(glottodist, type = "heatmap")
load_all()
glottoplot(glottodist, type = "heatmap")
document()
document()
load_all()
load_all()
install()
glottodata <- glottoget(meta = TRUE)
glottodata_original <- glottodata
glottodata_original
glottodata[[1]]
glottodata[1]
glottodata <- glottodata[[1]]
glottodata_addtable(glottodata_original, glottodata)
glottodata_addtable(glottodata_original, glottodata, name = "glottodata")
glottodata
glottodata <- glottoget(meta = TRUE)
glottodata[-1]
glottometa <- glottodata[-1]
glottodata <- glottodata[[1]]
hasmeta <- TRUE
glottodata_addtable(glottometa, glottodata, name = "glottodata")
glottodata_addtable(glottodata, glottometa, name = "glottodata")
funcsource(glottodata_addtable())
funcsource(glottodata_addtable)
funsource(glottodata_addtable)
load_all()
funcsource(glottodata_addtable)
glottodata
is_list(glottodata)
length(glottodata) != 1
(is_list(glottodata) & length(glottodata) != 1)
glottodata
glottodata <- list(glottodata)
glottodata
glottodata <- glottoget(meta = TRUE)
glottometa <- glottodata[-1]
glottometa
names(glottometa)
is_list(glottometa)
join_glottometa(glottodata = glottodata, glottometa = glottometa)
load_all()
join_glottometa(glottodata = glottodata, glottometa = glottometa)
load_all()
glottodata <- glottoget(meta = TRUE)
glottospacedata <- glottospace(glottodata)
glottocheck_hasmeta(glottodata)
glottometa <- glottodata[-1]
glottodata <- glottodata[[1]]
glottodata
join_glottometa(glottodata = glottodata, glottometa = glottometa)
glottodata <- glottoget(meta = TRUE)
glottospacedata <- glottospace(glottodata)
glottocheck_hasmeta(glottodata)
glottometa <- glottodata[-1]
glottodata <- glottodata[[1]]
hasmeta <- TRUE
if(class(glottodata) == "data.frame"){
glottodata <- glottodata_makespatial(glottodata)
}
if(polygons == TRUE){
glottodata <- points2pols(glottopoints = glottodata, method = method, radius = radius, country = country, continent = continent)
}
if(hasmeta){
glottodata <- join_glottometa(glottodata = glottodata, glottometa = glottometa)
}
hasmeta
glottodata <- join_glottometa(glottodata = glottodata, glottometa = glottometa)
glottodata
if(glottocheck_hasmeta(glottodata) ){
glottometa <- glottodata[-1]
glottodata <- glottodata[[1]]
hasmeta <- TRUE
}
glottometa
glottodata
class(glottodata) == "data.frame"
is_sf(glottodata)
!is_sf(glottodata)
join_glottometa(glottodata = glottodata, glottometa = glottometa)
glottodata
is_list(glottodata)
length(glottodata)
glottodata
glottometa
c(glottodata, glottometa)
list("glottodata" = glottodata)
glottodata <- list("glottodata" = glottodata)
names(glottodata) <- "glottodata"
c(glottodata, glottometa)
load_all()
glottodata <- glottoget(meta = TRUE)
glottospacedata <- glottospace(glottodata)
is_list(glottodata)
glottodata
glottodata <- glottodata_makespatial(glottodata)
glottometa <- glottodata[-1]
glottodata <- glottodata[[1]]
hasmeta <- TRUE
glottodata <- glottodata_makespatial(glottodata)
is_list(glottodata)
is_list(glottodata)
is_sf(glottodata)
load_all()
glottodata <- glottoget(meta = TRUE)
glottospacedata <- glottospace(glottodata)
glottospacedata
glottopoints <- glottofilter(continent = "South America")
glottopols <- glottospace(glottopoints, polygons = TRUE, method = "voronoi", continent = "South America")
glottodata
glottocheck_hasmeta(glottodata)
glottodata <- glottofilter(continent = "South America")
glottocheck_hasmeta(glottodata)
load_all()
glottodata <- glottofilter(continent = "South America")
glottopols <- glottospace(glottopoints, polygons = TRUE, method = "voronoi", continent = "South America")
glottomap(glottopols)
glottopols
c(!is.null(method), !is.null(radius), !is.null(country), !is.null(continent) )
method = NULL
radius = NULL
country = NULL
continent = NULL
any( c(!is.null(method), !is.null(radius), !is.null(country), !is.null(continent) ) )
any( c(!is.null(method), !is.null(radius), !is.null(country), !is.null(continent) ) )
load_all()
glottopoints <- glottofilter(continent = "South America")
glottopols <- glottospace(glottopoints, method = "voronoi", continent = "South America")
glottomap(glottopols)
glottosearch(find = "yurakar")
glottosearch(find = "yurakar")[,"name"]
glottosearch(find = "matsigenka")[,"name"]
glottosearch(find = "matsigenka", tolerance = 0.2)[,"name"]
?geoget
load_all()
?geoget
document()
?geoget
get_geodata(download = "elevation", country = "Peru")
nlclim <- geoget(download = "climate", country = "Netherlands")
glottomap(glottodata = nlclim)
geomap(nlclim)
?geomap
is_sf(nlclim)
nlclim
nlclim <- geoget(download = "climate", country = "Netherlands")
nlclim
geodata <- raster::getData(name = "worldclim", var = "bio", res = 10)
geodata
load_all()
nlclim <- geoget(download = "climate", country = "Netherlands")
nlclim
geomap(nlclim)
nlclim[[1]]
geomap(nlclim[[1]])
country = "Netherlands"
geodata <- raster::getData(name = "worldclim", var = "bio", res = 10, country = country)
funcsource(extractgeodata)
climate <- geoget(download = "climate")[[1]]
geomap(climate)
dutchies <- glottofilter(country = "Netherlands")
climatedutchies <- extractgeodata(glottodata = dutchies, geodata = climate, radius = 10, fun = "mean")
climatedutchies
climate
names(climate) <- "temperature"
climate
dutchies <- glottofilter(country = "Netherlands")
climatedutchies <- extractgeodata(glottodata = dutchies, geodata = climate, radius = 10, fun = "mean")
glottomap(climatedutchies, color = "temperature_mean")
climate <- geoget(download = "climate")[[12]]
names(climate) <- "precipitation"
climate <- geoget(download = "climate")[[12]]
names(climate) <- "precipitation"
geomap(climate)
dutchies <- glottofilter(country = "Netherlands")
climatedutchies <- extractgeodata(glottodata = dutchies, geodata = climate, radius = 10, fun = "mean")
glottomap(climatedutchies, color = "precipitation_mean")
glottomap(climatedutchies, color = "precipitation_mean", ptsize = 1)
document()
load_all()
document()
load_all()
install()
glottodata <- glottoget()
glottospacedata <- glottospace(glottodata)
glottodata <- glottoget(meta = TRUE)
glottospacedata <- glottospace(glottodata)
glottodata <- glottoget()
glottospacedata <- glottospace(glottodata)
glottospace(method = "buffer", radius = 250)
glottospace(glottodata, method = "buffer", radius = 250)
glottospacedata <- glottospace(glottodata, method = "buffer", radius = 250)
glottospacedata <- glottospace(glottodata, method = "buffer", radius = 1)
glottospacedata <- glottospace(glottodata, method = "buffer", radius = 250)
glottomap(glottospacedata)
glottospacedata <- glottospace(glottodata, method = "buffer", radius = 100)
glottomap(glottospacedata)
glottospacedata <- glottospace(glottodata, method = "buffer", radius = 10)
glottomap(glottospacedata)
glottospacedata <- glottospace(glottodata, method = "voronoi")
glottomap(glottospacedata)
document()
glottospacedata <- glottospace(glottodata, method = "buffer", radius = 5)
glottomap(glottospacedata)
document()
load_all()
install()
library(devtools)
load_all()
?gsub_dir
getwd()
# gsub_dir(dir = "Scripts", pattern = "color = 'green'", replacement = "color = 'blue'")
#
# # Define function to find-and-replace text in a single file
# file_find_replace <- function(filepath, pattern, replacement) {
#   file_contents <- readLines(filepath)
#   updated_contents <- gsub(x = file_contents, pattern = pattern, replacement = replacement)
#   cat(updated_contents, file = filepath, sep = "\n")
# }
#
# # Apply the function to each of the R scripts in the directory
glottospace_scripts <- list.files(path = "C:/Users/sjnor/surfdrive/PROJECTS_SN/SAPPHIRE/R/glottospace", pattern = "(r|R)$")
glottospace_scripts
# gsub_dir(dir = "Scripts", pattern = "color = 'green'", replacement = "color = 'blue'")
#
# # Define function to find-and-replace text in a single file
# file_find_replace <- function(filepath, pattern, replacement) {
#   file_contents <- readLines(filepath)
#   updated_contents <- gsub(x = file_contents, pattern = pattern, replacement = replacement)
#   cat(updated_contents, file = filepath, sep = "\n")
# }
#
# # Apply the function to each of the R scripts in the directory
glottospace_scripts <- list.files(path = "C:/Users/sjnor/surfdrive/PROJECTS_SN/SAPPHIRE/R/glottospace/R", pattern = "(r|R)$")
glottospace_scripts
# createglottodata
# createglottosubdata
xfun::gsub_dir(dir = "C:/Users/sjnor/surfdrive/PROJECTS_SN/SAPPHIRE/R/glottospace/R", pattern = "createglottodata", replacement = "glottocreatedata")
# createglottodata
# createglottosubdata
xfun::gsub_dir(dir = "C:/Users/sjnor/surfdrive/PROJECTS_SN/SAPPHIRE/R/glottospace/R", pattern = "createglottosubdata", replacement = "glottocreatesubdata")
xfun::gsub_dir(dir = "C:/Users/sjnor/surfdrive/PROJECTS_SN/SAPPHIRE/R/glottospace/R", pattern = "create_", replacement = "glottocreate_")
glottodata <- "glottobase"
tools::file_ext(glottodata)
tools::file_ext(glottodata) == ""
glottodata <- NULL
tools::file_ext(glottodata) == ""
is.null(glottodata) | glottodata == "glottobase"
glottoget(filename = NULL, meta = meta, simplify = simplify, create = "glottosubdata")
meta = FALSE
simplify = TRUE
glottoget(filename = NULL, meta = meta, simplify = simplify, create = "glottosubdata")
document()
?glottodata
document()
?glottodata
?glottoget
?glottodata
document()
?glottodata
document()
?glottodata
document()
?glottodata
t <- glottodata ()
load_all()
t <- glottodata ()
t <- glottodata()
load_all()
t <- glottodata()
document()
t <- glottodata()
?glottodata
load_all()
?glottodata
t <- glottodata()
glottodata()
